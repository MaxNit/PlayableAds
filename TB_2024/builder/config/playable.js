"use strict";const path=require("path"),fs=require("fs"),paths=require("./paths"),utils=require("../app/utils");let appSettings;try{appSettings=require(paths.appSettingsJs)}catch(e){throw Error("Error")}const getTitleKey=()=>{let e=getPlayableKey();return e.slice(0,e.length-4)},getVersion=()=>{let e=path.basename(paths.appPath).toLowerCase(),t=e.lastIndexOf("v");return t>4?`v${e.slice(t+1)}`:""},getPlayableKey=()=>{let e=path.basename(paths.appPath).toLowerCase();e=e.split("-")[0];let t=e.lastIndexOf("v");return t>4?e.slice(0,t):e},getPlaybleCode=()=>{let e=path.basename(paths.appPath).toLowerCase();return e.split("-")[1]},getNumber=()=>{let e=getPlayableKey();return getTitleKey(),e.slice(-4)},getHash=()=>"abcd",getNamingSettingsForApi=e=>({}),getLangsFolders=()=>{let e=[],t=path.join(paths.appSrc,"img/langs"),a;return fs.existsSync(t)&&(a=utils.getFolders(t)).forEach(t=>{"en"===t?e.unshift(t):e.push(t)}),e};module.exports={playbleCode:getPlaybleCode(),titleKey:getTitleKey(),playableKey:getPlayableKey(),playableHash:"abcd",playableNumber:getNumber(),playableVersion:getVersion(),getNamingSettingsForApi,playableLangs:getLangsFolders(),playableDistForTests:path.join(paths.appDistTest,"abcd"),playableDistForDemo:path.join(`${getTitleKey()}_abcd`),playableConfig:appSettings};