const fs=require("fs"),gulp=require("gulp"),path=require("path"),zip=require("gulp-zip"),swig=require("gulp-swig"),gutil=require("gulp-util"),concat=require("gulp-concat"),addsrc=require("gulp-add-src"),htmlmin=require("gulp-htmlmin"),gulpSizeFile=require("gulp-size"),stringReplace=require("gulp-string-replace"),rename=require("gulp-rename"),paths=require("../../config/paths"),{builderConfig:e,gameConfig:t,tempStoragePath:i}=require("../../config/builder/index"),{playableNumber:s,playableKey:a,playbleCode:l,playableConfig:n,playableVersion:p,getNamingSettingsForApi:r}=require("../../config/playable"),buildStats=require("../BuildStats");class ApiBuilder{constructor(t,i,s){return this.html=t,this.playable_version_settings=s,this.isDemo=i.isDemo||!1,this.dist=i.dist||null,this.extraData=i.extraData||{},this.isDis=i.isDis,this.lang=i.lang,this.apiName=i.apiName,this.playableEnvApiName=i.playableEnvApiName,this.settings=e.apiSettings[this.apiName],this.run()}run(){return this[this.apiName]?this[this.apiName]():(this.manifest=require("../../config/builder/manifest"),new Promise(async(e,s)=>{let a;if(this.settings.additionalFiles&&(a=[],this.settings.additionalFiles.forEach(e=>{if(e=e.replace("temp",i),path.isAbsolute(e)||(e=path.join(paths.ownPath,e)),"tan"===this.apiName&&"config.json"===path.basename(e)){let t=this.lang;"cn"===t&&(t="zh-Hant");let s=JSON.parse(fs.readFileSync(e,"utf-8"));s.playable_languages=[t];let l=path.join(i,"tanConfig",this.lang);fs.existsSync(l)||fs.mkdirSync(l,{recursive:!0});let n=path.join(l,path.basename(e));fs.writeFileSync(n,JSON.stringify(s,(e,t)=>t instanceof Array?JSON.stringify(t):t,2).replace(/\\/g,"").replace(/\"\[/g,"[").replace(/\]\"/g,"]")),e=n}a.push(e)})),this.settings.collectFiles){a=a||[];let l=await this.collect();a=a.concat(l)}let n=path.join(paths.ownSrc,`html/${this.settings.htmlSource}`),p=`temp${Math.random()}`,r=".zip",h=gulpSizeFile({pretty:!0,showTotal:!1}),o={lang:this.lang,apiName:this.playableEnvApiName||this.apiName,titleKey:t.titleKey,titleName:t.nameGame,params:this.settings.playableParams},g=Object.assign({playableEnv:o,playable_version_settings:this.playable_version_settings},this.html.getData(this.apiName),this.extraData),c=gulp.src(n).pipe(swig({defaults:{autoescape:!0,cache:!1},data:g})).on("error",gutil.log);if((void 0===this.settings.minifyHTML||!0===this.settings.minifyHTML)&&(c=c.pipe(htmlmin({collapseWhitespace:!0}))),this.settings.nameHtmlHowFolder){let m=Object.assign({lang:this.lang,isDis:this.isDis,sizeFile:h.size},this.settings,this.extraData),u=this.getFolderNameForApi(this.apiName,m);c=c.pipe(rename(function(e){e.basename=u,e.extname=".html"}))}if(this.isDemo&&this.dist){c=c.pipe(gulp.dest(this.dist)),e();return}a&&(c=c.pipe(addsrc(a))),this.settings.withoutArchive&&(r=".html",c=c.pipe(concat(`${p}${r}`))),this.settings.measureArchiveWeight||(c=c.pipe(h)),this.settings.withoutArchive||(c=c.pipe(zip(`${p}${r}`))),this.settings.measureArchiveWeight&&(c=c.pipe(h)),"moloco"===this.apiName&&(c=c.pipe(stringReplace("XMLHttpRequest","Object")));let d=this.getDist();c=c.pipe(gulp.dest(d)).on("finish",()=>{let t=Object.assign({lang:this.lang,isDis:this.isDis,sizeFile:h.size},this.settings,this.extraData),i=this.getFolderNameForApi(this.apiName,t),s=Math.ceil(t.sizeFile/1e5)/10;buildStats.addFileData({apiName:this.apiName,fileName:i+r,fileSize:s,language:this.lang,hasDisclaimer:this.isDis}),fs.rename(`${d}/${p}${r}`,`${d}/${i}${r}`,t=>{t?console.log("ERROR: "+t):e()})})}))}getIdApi(e){return t.abbrForApi&&t.abbrForApi[e]?t.abbrForApi[e]:e}getFolderNameForApi(i,a){let h=a.lang||"en",o=e.apiSettings[i],g=r(i),c=a.template||a.templateName||t.templateName||e.baseSettings.templateName;c=c.replace("%titleKey%",t.titleKey),c=(c=(c=(c=this.playable_version_settings&&this.playable_version_settings.number?c.replace("%number%",`${this.playable_version_settings.number}`):c.replace("%number%",s)).replace("%autostore%",o.autostore?"_mkt":"")).replace("%api%",this.getIdApi(o.apiType))).replace("%lang%",h),c=this.playable_version_settings&&this.playable_version_settings.title?c.replace("%version%",`_${this.playable_version_settings.title}`):c.replace("%version%",p);let m="";n.GLOBAL_SETTINGS_PLAYABLE&&n.GLOBAL_SETTINGS_PLAYABLE.code?m=`_${n.GLOBAL_SETTINGS_PLAYABLE.code}`:l&&(m=`_${l}`),c=c.replace("%codeplayable%",m),c=g.buttonStore?a.buttonStore?c.replace("%store%",`_${a.buttonStore}`):c.replace("%store%","_store"):c.replace("%store%",""),c=a.adSize?c.replace("%adSize%",`${a.adSize[0]}x${a.adSize[1]}_`):c.replace("%adSize%",""),c=a.isDis?c.replace("%dis%","_dis"):c.replace("%dis%",""),c=o.modification?c.replace("%modification%",`_${o.modification}`):c.replace("%modification%","");let u;return g.buttonName&&(u="string"==typeof g.buttonName?g.buttonName:g.buttonName[h]?g.buttonName[h]:g.buttonName.default),c=(c=c.replace("%btn%",u?`_${u}`:"")).replace("%sizeFile%",`${Math.ceil(a.sizeFile/1e5)/10}mb`)}concat(e){gulp.src(e.files,{allowEmpty:!0}).pipe(concat(e.name)).pipe(gulp.dest(e.dist)).on("finish",()=>{e.cb&&e.cb()})}collect(e=null){let t=e||path.join(i,"API",this.apiName,this.lang),s=path.join(t,this.settings.subdirectory||"");return new Promise(async(e,i)=>{await this.collectJS(s),await this.collectCSS(s),e([t+"/**/*"])})}collectJS(e){let t=this.apiName,i=this.lang;return new Promise(async(s,a)=>{let l=[this.manifest.getConfig(t,!0),this.manifest.getLibs(t,!0),this.manifest.getSpriteSheet(t,!0),this.manifest.getBaseImages(t,!0),this.manifest.getLangImages(i,!0)];this.manifest.getSounds(t)&&l.push(this.manifest.getSounds(t,!0)),l.push(this.manifest.getApp(!0)),this.concat({files:l,name:"app.js",dist:e,cb(){s(path.join(e,"app.js"))}})})}collectCSS(e){return this.lang,new Promise(async(t,i)=>{let s=[this.manifest.getCSS(),this.manifest.getLoaderCSS()];this.concat({files:s,name:"styles.css",dist:e,cb(){t(path.join(e,"styles.css"))}})})}getNameDistFolder(e){let i=e;i=i.replace("%titleKey%",t.titleKey),i=this.playable_version_settings&&this.playable_version_settings.number?i.replace("%number%",`${this.playable_version_settings.number}`):i.replace("%number%",s),i=this.playable_version_settings&&this.playable_version_settings.title?i.replace("%version%",`_${this.playable_version_settings.title}`):i.replace("%version%",p);let a="";return n.GLOBAL_SETTINGS_PLAYABLE&&n.GLOBAL_SETTINGS_PLAYABLE.code?a=`_${n.GLOBAL_SETTINGS_PLAYABLE.code}`:l&&(a=`_${l}`),i=i.replace("%codeplayable%",a)}getDist(){if(this.dist)return this.dist;let i=this.getNameDistFolder(t.distBuild||e.baseSettings.templateDistFolder),s=this.getNameDistFolder(t.distVersion||e.baseSettings.templateDistVersion),a=`${this.settings.buildFolderName}/${this.lang}`;return t.dirStructure&&(a=(a=t.dirStructure).replace("${lang}",this.lang)),path.join(paths.appDistProd,i,s,a)}}module.exports=ApiBuilder;